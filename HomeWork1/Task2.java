package homeWork1;

// Задание 2 - Приоритет операторов

public class Task2 {

    public static void main(String[] args) {

        // Исходные значения
        int a = 5;
        int b = 2;
        int c = 8;

        // числовой результат выражений
        getResVel(a, b, c);

        // логический результат выражений
        getResFact();
    }

    public static void getResVel (int a, int b, int c) {

        String ex = "Задание";
        String res = "Результат: ";

        System.out.println(ex + " 2.1: " + "5 + 2 / 8");
        int r1 = a + b/c;
        System.out.println(res + r1);
        /*
        1. Деления;
        2. Сложения;
        3. Присваивания. Результат 5  (т.к. все переменные int, округляется до целой части)
        */
        System.out.println();

        // Задание 2.2

        System.out.println(ex + " 2.2: " + "(5 + 2) / 8");
        int r2 = (a + b)/c;
        System.out.println(res + r2);
         /*
        1. Операция в скобках (сложение);
        2. Деление;
        3. Присваивания. Результат 0  (т.к. все переменные int, округляется до целой части)
        */
        System.out.println();

        // Задание 2.3

        System.out.println(ex + " 2.3: " + "(5 + 2++) / 8");
        int r3 = (a + b++)/c;
        System.out.println(res + r3);
        System.out.println("b: " + b + " (значение переменной после выполнения выражения)");
        /*
        1. Операция в скобках (сложение a + b, затем приращение b);
        2. Деление;
        3. Присваивания. Результат 0  (т.к. все переменные int, округляется до целой части); b: 3
        */
        b = 2; // возвращаем исходное значение!
        System.out.println();

        // Задание 2.4

        System.out.println(ex + " 2.4: " + "(5 + 2++) / --8");
        int r4 = (a + b++)/--c;
        System.out.println(res + r4);
        System.out.println("b: " + b + " (значение переменной после выполнения выражения)");
        System.out.println("c: " + c + " (значение переменной после выполнения выражения)");
        /*
        1. Операция в скобках (сложение a + b, затем приращение b);
        2. Уменьшение с;
        3. Деление;
        3. Операция присваивания. Результат 1  (т.к. все переменные int, округляется до целой части); b: 3; c: 7
        */
        b = 2; c = 8; // возвращаем исходные значения!
        System.out.println();

        // Задание 2.5

        System.out.println(ex + " 2.5: " + "(5 * 2 >> 2++) / --8");
        int r5 = (a * b  >> b++)/--c;
        System.out.println(res + r5);
        System.out.println("b: " + b + " (значение переменной после выполнения выражения)");
        System.out.println("c: " + c + " (значение переменной после выполнения выражения)");
        /*
        1. Операция в скобках (умножение a * b, затем сдвиг вправо на b, приращение b);
        2. Уменьшение с;
        3. Деление;
        3. Операция присваивания. Результат 0  (т.к. все переменные int, округляется до целой части); b: 3; c: 7
        */
        b = 2; c = 8; // возвращаем исходные значения!
        System.out.println();

        //Задание 2.6

        System.out.println(ex + " 2.6: " + "(5 + 7 > 20 ? 68 : 22 * 2 >> 2++) / --8");
        int r6 = (a + 7 > 20 ? 68 : 22 * b >> b++ ) / --c;
        System.out.println(res + r6);
        System.out.println("b: " + b + " (значение переменной после выполнения выражения)");
        System.out.println("c: " + c + " (значение переменной после выполнения выражения)");
        /*
        1. Операция в скобках (результат условия 22; умножаем на b; сдвиг вправо на b; приращение b  );
        2. Уменьшение с;
        3. Деление;
        3. Операция присваивания. Результат 1  (т.к. все переменные int, округляется до целой части); b: 3; c: 7
        */
        b = 2; c = 8; // возвращаем исходные значения!
        System.out.println();
    }

    public static void getResFact () {

        String ex = "Задание";
        String res = "Результат: ";

        //Задание 2.7

        System.out.println(ex + " 2.7: " + "(5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> 2++) / --8");
        System.out.println(res + "данное выражение не скомпилируется т.к. некорректно использован логический тип " +
                "68 >= 68");
        System.out.println();

        //Задание 2.8

        System.out.println(ex + " 2.8: " + "6 - 2 > 3 && 12 * 12 <= 119");
        boolean r8 = 6 - 2 > 3 && 12 * 12 <= 119;
        System.out.println(res + r8);
        // Результат false, т.к. одно из условий оператора && false (12 * 12 <= 119)
        System.out.println();

        //Задание 2.9

        System.out.println(ex + " 2.9: " + "true && false");
        boolean r9 = true && false;
        System.out.println(res + r9);
        // Результат false, т.к. одно из условий оператора && false
        System.out.println();
    }
}
